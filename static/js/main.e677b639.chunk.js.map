{"version":3,"sources":["media/elevator.svg","media/elevator_sound.mp3","components/Elevator.js","components/Button.js","components/Floor.js","data/buildingData.js","components/Building.js","App.js","reportWebVitals.js","index.js"],"names":["_g","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgElevator","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","preserveAspectRatio","ref","id","transform","fill","stroke","d","ForwardRef","ELEVATOR_COLORS","Elevator","className","style","top","elevator","position","isDoorOpen","isOccupied","Button","condition","onClick","handleClick","Floor","floorNumber","floor","number","setFloorNumber","elevators","map","src","audioFile","document","getElementsByClassName","play","createFloorsBuilding","num","Array","from","floorId","createElevators","elevatorId","inFloor","Building","updateData","numOfFloorsInBuilding","numOfElevators","floorsInBuilding","getBuildingData","state","rafIds","forEach","cancelAnimationFrame","setState","handleSubmit","numOfFloors","handleChange","e","name","value","a","queueCopy","queue","push","prevState","handleRequest","stateQueue","findAvailableElevator","copyQueue","shift","moveElevator","filter","reduce","acc","newDiff","Math","abs","diff","elevatorToMove","find","rafId","currPosition","startPosition","isMoveUp","startTime","Date","now","step","interval","el","setTimeout","requestAnimationFrame","updateRafIdsState","rafIdsCurrState","type","onChange","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e677b639.chunk.js","sourcesContent":["var _g;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgElevator(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"20.000000pt\",\n    height: \"40.000000pt\",\n    viewBox: \"0 0 50.000000 50.000000\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0.000000,50.000000) scale(0.100000,-0.100000)\",\n    fill: \"current\",\n    stroke: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 200 l0 -200 250 0 250 0 0 200 0 200 -250 0 -250 0 0 -200z m475 0 l0 -175 -225 0 -225 0 -3 165 c-1 90 0 170 3 177 3 11 51 13 227 11 l223 -3 0 -175z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M74 345 c-4 -8 -4 -26 -2 -40 3 -14 -1 -30 -8 -36 -16 -13 -20 -139 -4 -139 6 0 10 -20 10 -45 l0 -45 40 0 40 0 0 45 c0 25 5 45 10 45 14 0 13 123 -2 138 -6 6 -12 29 -12 49 -1 35 -3 38 -34 41 -22 2 -34 -2 -38 -13z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M214 345 c-4 -8 -4 -26 -2 -40 3 -14 -1 -30 -8 -36 -16 -13 -20 -139 -4 -139 6 0 10 -20 10 -45 l0 -45 40 0 40 0 0 45 c0 25 5 45 10 45 14 0 13 123 -2 138 -6 6 -12 29 -12 49 -1 35 -3 38 -34 41 -22 2 -34 -2 -38 -13z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M354 345 c-4 -8 -4 -26 -2 -40 3 -14 -1 -30 -8 -36 -16 -13 -20 -139 -4 -139 6 0 10 -20 10 -45 l0 -45 40 0 40 0 0 45 c0 25 5 45 10 45 14 0 13 123 -2 138 -6 6 -12 29 -12 49 -1 35 -3 38 -34 41 -22 2 -34 -2 -38 -13z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgElevator);\nexport default __webpack_public_path__ + \"static/media/elevator.6047da45.svg\";\nexport { ForwardRef as ReactComponent };","export default __webpack_public_path__ + \"static/media/elevator_sound.6347182a.mp3\";","import React from 'react';\r\nimport { ReactComponent as ElevatorImg } from '../media/elevator.svg';\r\n\r\nconst ELEVATOR_COLORS = {\r\n  occupied: '#ed484d',\r\n  arrived: '#5bcd88',\r\n  available: '#000000',\r\n};\r\n\r\nexport const Elevator = (props) => {\r\n  const getConditionColor = () => {\r\n    if (props.elevator.isDoorOpen) return ELEVATOR_COLORS.arrived;\r\n    else {\r\n      return props.elevator.isOccupied ? ELEVATOR_COLORS.occupied : ELEVATOR_COLORS.available;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"elevator\" style={{ top: props.elevator.position }}>\r\n      <ElevatorImg fill={ getConditionColor() } />\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport const Button = (props) => {\r\n  \r\n  return (\r\n    <>\r\n      <button \r\n        className={`capitalize border-radius bold ${props.condition}`} \r\n        onClick={props.handleClick}>\r\n          {props.condition}\r\n      </button>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport audioFile from '../media/elevator_sound.mp3';\r\nimport { Elevator } from './Elevator';\r\nimport { Button } from './Button';\r\n\r\nexport const Floor = (props) => {\r\n\r\n  const handleClick = () => {\r\n    props.handleClick(props.floor);\r\n  }\r\n\r\n  const playSound = () => {\r\n    const audioEl = document.getElementsByClassName(\"audio-element\")[0];\r\n    audioEl.play();\r\n  }\r\n\r\n  const setFloorNumber = () => {\r\n    const floorNumber = props.floor.number;\r\n    \r\n    switch (floorNumber) {\r\n      case 0:\r\n        return `ground floor`;\r\n      case 1:\r\n        return `${floorNumber}st`;\r\n      case 2:\r\n        return `${floorNumber}nd`;\r\n      case 3:\r\n        return `${floorNumber}rd`;\r\n      default:\r\n        return `${floorNumber}th`;\r\n    }\r\n  }\r\n\r\n  const setCellsAndElevators = () => {\r\n    return (\r\n      props.elevators.map((elevator, i) => {\r\n        if (props.floor.number === 0) return <div className=\"cell\" key={ i }>{ <Elevator elevator={elevator} /> }</div>\r\n        return <div className=\"cell\" key={ i }></div>\r\n      }\r\n      )\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"Floor flex align-center justify-center\">\r\n      <h5 className=\"capitalize\">{ setFloorNumber() }</h5>\r\n      <div className=\"cells-container flex\">{ setCellsAndElevators() }</div>\r\n      <Button handleClick={ handleClick } condition={ props.floor.condition } />\r\n      <audio className=\"audio-element\">\r\n        <source src={ audioFile }></source>\r\n      </audio>\r\n      { props.floor.condition === 'arrived' && playSound() }\r\n    </div>\r\n  )\r\n}\r\n\r\n","\r\nexport function getBuildingData(numOfFloorsInBuilding, numOfElevators) {\r\n  return {\r\n    floorsInBuilding: createFloorsBuilding(numOfFloorsInBuilding),\r\n    elevators: createElevators(numOfElevators) \r\n  }; \r\n};\r\n\r\nfunction createFloorsBuilding(num) {\r\n  let initialArray = Array.from(Array(num).keys());\r\n\r\n  let floorsArray = initialArray.map((floorId) => {\r\n    return {\r\n      number: floorId,\r\n      condition: 'call',\r\n    }\r\n  });\r\n\r\n  return floorsArray;\r\n}\r\n\r\nfunction createElevators(num) {\r\n  let initialArray = Array.from(Array(num).keys());\r\n\r\n  let elevatorsArray = initialArray.map((elevatorId) => {\r\n    return {\r\n      id: elevatorId,\r\n      isOccupied: false,\r\n      isDoorOpen: false,\r\n      inFloor: 0,\r\n      position: 0,\r\n    }\r\n  });\r\n\r\n  return elevatorsArray;\r\n}","import React, { Component } from 'react';\r\nimport { Floor } from './Floor';\r\nimport { getBuildingData } from '../data/buildingData';\r\n\r\nexport class Building extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      numOfFloors: 10,\r\n      numOfElevators: 5,\r\n      floorsInBuilding: [],\r\n      elevators: [],\r\n      queue: [],\r\n      rafIds: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateData(this.state.numOfFloors, this.state.numOfElevators);\r\n  }\r\n\r\n  updateData = (numOfFloorsInBuilding, numOfElevators) => {\r\n    const { floorsInBuilding, elevators } = getBuildingData(numOfFloorsInBuilding, numOfElevators);\r\n\r\n    this.state.rafIds.forEach(id => {\r\n      cancelAnimationFrame(id)\r\n    });\r\n\r\n    this.setState(() => {\r\n      return {\r\n        floorsInBuilding,\r\n        elevators,\r\n        rafIds: Array.from(Array(numOfElevators).keys())\r\n      }\r\n    })\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    this.updateData(this.state.numOfFloors, this.state.numOfElevators);\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (value < 1) return;\r\n\r\n    this.setState(() => {\r\n      return { [name]: +value }\r\n    });\r\n  }\r\n\r\n  handleClick = async (floor) => {\r\n    const { number: floorNumber, condition } = floor;\r\n    if (condition !== 'call') return;\r\n\r\n    const queueCopy = [...this.state.queue];\r\n    queueCopy.push(floorNumber);\r\n\r\n    await this.setState(prevState => {\r\n      return {\r\n      floorsInBuilding: prevState.floorsInBuilding.map(floor => floor.number === floorNumber ?\r\n        { ...floor, condition: 'waiting' }\r\n        : floor),\r\n      queue: [...queueCopy]\r\n    }})\r\n\r\n    this.handleRequest();\r\n  }\r\n  \r\n  handleRequest = async () => {  \r\n    const { queue: stateQueue } = this.state;  \r\n    if (stateQueue.length === 0) return;\r\n    const floorNumber = stateQueue[0];\r\n\r\n    const elevatorId = this.findAvailableElevator(floorNumber);\r\n    if (elevatorId === -1) return;\r\n\r\n    const copyQueue = [...stateQueue];\r\n    copyQueue.shift();\r\n    await this.setState(() => {\r\n      return {\r\n      queue: [...copyQueue]\r\n    }})\r\n\r\n    this.moveElevator(elevatorId, floorNumber);\r\n  }\r\n\r\n  findAvailableElevator = (floorNumber) => {\r\n    const closestElevator = \r\n      this.state.elevators.filter(elevator => !elevator.isOccupied).reduce((acc, elevator) => {\r\n        let newDiff = Math.abs(floorNumber - elevator.inFloor);\r\n        if (newDiff < acc.diff) {\r\n          acc.diff = newDiff;\r\n          acc.elevatorId = elevator.id;\r\n        }\r\n\r\n        return acc;\r\n      }, { diff: 1000000000, elevatorId: -1 });\r\n\r\n    return closestElevator.elevatorId;\r\n  }\r\n\r\n  moveElevator = (elevatorId, floorNumber) => {\r\n    const elevatorToMove = this.state.elevators.find(elevator => elevator.id === elevatorId);\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n      elevators: prevState.elevators.map(elevator => elevator.id === elevatorId ?\r\n        { ...elevator, isOccupied: true }\r\n        : elevator)\r\n    }})\r\n\r\n    const target = -(floorNumber * 56);\r\n    const startPosition = elevatorToMove.position;\r\n    const isMoveUp = target < startPosition;\r\n    const startTime = Date.now();\r\n    let rafId, currPosition;\r\n\r\n    const step = () => {\r\n      let interval = Date.now() - startTime;\r\n      currPosition = isMoveUp ? startPosition - (interval / 25) : startPosition + (interval / 25);\r\n\r\n      this.setState(prevState => {\r\n        return {\r\n        elevators: prevState.elevators.map(elevator => elevator.id === elevatorId ?\r\n          { ...elevator, position: currPosition }\r\n          : elevator)\r\n      }})\r\n\r\n      const stopCondition = isMoveUp ? currPosition <= target : currPosition >= target;\r\n      if (stopCondition) {\r\n\r\n        this.setState(prevState => {\r\n          return {\r\n          elevators: prevState.elevators.map(el => el.id === elevatorId ?\r\n            { ...el, position: target, inFloor: floorNumber, isDoorOpen: true }\r\n            : el)\r\n        }});\r\n\r\n        this.setState(prevState => {\r\n          return {\r\n          floorsInBuilding: prevState.floorsInBuilding.map(floor => floor.number === floorNumber ?\r\n            { ...floor, condition: 'arrived' }\r\n            : floor)\r\n        }});\r\n\r\n        setTimeout(() => {\r\n          this.setState(prevState => {\r\n            return {\r\n            floorsInBuilding: prevState.floorsInBuilding.map(floor => floor.number === floorNumber ?\r\n              { ...floor, condition: 'call' }\r\n              : floor),\r\n            elevators: prevState.elevators.map(el => el.id === elevatorId ?\r\n              { ...el, isDoorOpen: false, isOccupied: false }\r\n              : el)\r\n          }});\r\n\r\n          this.handleRequest();\r\n        }, 2000);\r\n\r\n        return;\r\n      }\r\n      rafId = requestAnimationFrame(step);\r\n\r\n      this.updateRafIdsState(elevatorId, rafId);\r\n    }\r\n    step();\r\n  }\r\n\r\n  updateRafIdsState = async (elevatorId, rafId) => {\r\n\r\n    let rafIdsCurrState = [...this.state.rafIds];\r\n    rafIdsCurrState[elevatorId] = rafId;\r\n    await this.setState(() => {\r\n      return {\r\n        rafIds: [...rafIdsCurrState]\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const renderFloors = () => {\r\n      return this.state.floorsInBuilding.map(floor => <Floor\r\n        key={ floor.number }\r\n        floor={ floor }\r\n        elevators={ this.state.elevators }\r\n        handleClick={ this.handleClick }\r\n      />\r\n      )\r\n    }\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"form\">\r\n          <label className=\"capitalize\">\r\n            floors:\r\n            <input type=\"number\" name=\"numOfFloors\" value={ this.state.numOfFloors } onChange={ this.handleChange } />\r\n          </label>\r\n          <label className=\"capitalize\">\r\n            elevators:\r\n            <input type=\"number\" name=\"numOfElevators\" value={ this.state.numOfElevators } onChange={ this.handleChange } />\r\n          </label>\r\n          <button type=\"submit\" onClick={ this.handleSubmit }>Update</button>\r\n        </div>\r\n        <div className=\"building bold\">\r\n          { renderFloors() }\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import './styles/global.scss';\nimport { Building } from './components/Building';\n\nexport const App = () => {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header center bold capitalize\">\n       <h1>elevator exercise</h1>\n      </header>\n      <Building />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}